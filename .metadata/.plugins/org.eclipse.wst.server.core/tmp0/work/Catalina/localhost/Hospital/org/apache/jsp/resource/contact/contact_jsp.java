/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.10
 * Generated at: 2021-09-30 03:34:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resource.contact;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class contact_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./resource/common/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".contact{\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding-top: 50px;\r\n");
      out.write("	position:absolute;\r\n");
      out.write("	z-index: -8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contact  .box-row-item-1 {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	background: #e6e6e6;\r\n");
      out.write("	border: 2px solid none;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container-fluid contact\">\r\n");
      out.write("	 <div class=\"row pt-5\">\r\n");
      out.write("			<div class=\"col-sm-12 col-md-4 col-xl-4\">\r\n");
      out.write("				<div class=\"bg-primary box-row-item-1\">\r\n");
      out.write("					<div class=\"text-center\">\r\n");
      out.write("						<h>Contact Us</h>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<label class=\"text-danger\"> ");
 
				    String validation = "Sorry ! Somthing is going wrong .";
				    if(true){
				    	out.print(validation);
				    }
				    
      out.write("\r\n");
      out.write("				</label>\r\n");
      out.write("\r\n");
      out.write("				<form>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleFormControlInput1\" class=\"form-label\">Your Name (required)</label> \r\n");
      out.write("						<input type=\"text\" class=\"form-control\"\r\n");
      out.write("							id=\"exampleFormControlInput1\" required>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleFormControlInput1\" class=\"form-label\">Your Email (required)\r\n");
      out.write("						</label> <input type=\"email\" class=\"form-control\"\r\n");
      out.write("							id=\"exampleFormControlInput1\" required>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleFormControlInput1\" class=\"form-label\">Telephone\r\n");
      out.write("							address</label>\r\n");
      out.write("							 <input type=\"tel\" class=\"form-control\"\r\n");
      out.write("							id=\"exampleFormControlInput1\" >\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleFormControlInput1\" class=\"form-label\">Your Message (required)</label> \r\n");
      out.write("						<textarea type=\"text\" class=\"form-control\"\r\n");
      out.write("							id=\"exampleFormControlInput1\"  required rows=\"5\" >\r\n");
      out.write("						</textarea>	\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"text-center mb-3\">\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-dark \">Send Message</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-12 col-md-8 col-xl-8\">\r\n");
      out.write("				<iframe\r\n");
      out.write("					src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d31699.108805027652!2d79.88991583955077!3d6.72234630000001!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ae2460ff37119d1%3A0xa3668e57219c4e61!2sAsiri-%20Laboratory!5e0!3m2!1sen!2slk!4v1632253817440!5m2!1sen!2slk\"\r\n");
      out.write("					style=\"width: 100%; height: 100%;\" allowfullscreen=\"\"\r\n");
      out.write("					loading=\"lazy\">\r\n");
      out.write("				 </iframe>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"./resource/common/js/bootstrap.min.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
